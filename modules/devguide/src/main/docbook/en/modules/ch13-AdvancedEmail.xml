<chapter id="mailsupport">
  <title>Advanced Mail Support</title>
  <para>jBPM 4 takes advantage of the JavaMail API to make high-level email
    services available to business process authors.</para>

  <section id="mailproducers">
    <title>Producers</title>
    <para>Producers are responsible for creating email messages within jBPM. All mail producers 
      implement the <literal>org.jbpm.pvm.internal.email.spi.MailProducer</literal> interface.
      A default mail producer is available out of the box to address typical email needs.</para>

    <section id="defaultmailproducer">
      <title>Default Producer</title>
      <para>The default mail producer is capable of creating email messages with text,
        HTML and attachments from a template. Templates can be provided inline or
        in the process-engine-context section of the jBPM configuration. Templates
        may contain expressions which are evaluated through the script manager.
      </para>
      <para>The following listing presents a mail activity with an inline template.</para>
      <programlisting><![CDATA[<mail name="rectify" language="juel">                             (1)
  <from addresses='winston@minitrue' />                           (2)
  <to addresses='julia@minitrue, obrien@miniluv'/>                (3)
  <cc users='bigbrother'/>
  <bcc groups='thinkpol, innerparty'/>
  <subject>Part ${part} Chapter ${chapter}</subject>              (4)
  <text>times ${date} reporting bb dayorder doubleplusungood      (5)
    refs ${unpersons} rewrite fullwise upsub antefiling</text>
  <html><table><tr><td>times</td><td>${date}</td>                 (6)
    <td>reporting bb dayorder doubleplusungood 
    refs ${unpersons} rewrite fullwise upsub antefiling</td>
    </tr></table></html>
  <attachments>                                                   (7)
    <attachment url='http://www.george-orwell.org/1984/3.html'/>
    <attachment resource='org/example/pic.jpg'/>
    <attachment file='${user.home}/.face'/>
  </attachments>
</mail>]]></programlisting>
      <orderedlist>
      <listitem><para>Expressions within the template are written in the scripting language
        indicated here. If not specified, the default expression language will be assumed.
        </para></listitem>
      <listitem><para>List of message senders. Senders are either identified directly by
        their email addresses or appointed by means of the identity model.</para></listitem>
      <listitem><para>Lists of message recipients, categorized as follows: <emphasis>To</emphasis>
        (primary), <emphasis>CC</emphasis> (carbon copy) and <emphasis>BCC</emphasis> (blind 
        carbon copy). Like senders, recipients are directly identified by their email addresses
        or appointed by means of the identity model.</para></listitem>
      <listitem><para>Character data contained in element <literal>subject</literal> 
        are used as the message subject.</para></listitem>
      <listitem><para>Character data contained in element <literal>text</literal> 
        are used as the plain text content of the message.</para></listitem>
      <listitem><para>Nodes contained in element <literal>html</literal>
        are used as the HTML content of the message.</para></listitem>
      <listitem><para>Attachments can be specified as absolute URLs,
        classpath resources or local files.</para></listitem>
      </orderedlist>
      <para>Note that every section of the template is amenable to expression evaluation.</para>
    </section>
    <para>For complex emails or custom generation of attachments, see: <link 
      linkend="customemails">Extension Points: Custom Emails</link>.</para>
  </section>

  <section id="mailtemplates">
    <title>Templates</title>
    <para>Mail templates are available to externalize commonly used messages from process definitions.
      Templates are placed in the process-engine-context section of your configuration file. All elements
      available to inline templates, as described in the <link linkend="defaultmailproducer">previous
      section</link> are available to external templates. Consider the fragment below.</para>
    <programlisting><![CDATA[<jbpm-configuration>
<process-engine-context>
  <mail-template name="rectify-template">
    <!-- same elements as inline template -->
  </mail-template>
</process-engine-context>
</jbpm-configuration>]]></programlisting>
    <para>Each template must have an unique name. Mail activities may reference the template
      through the <literal>template</literal> attribute, as follows.</para>
    <programlisting><![CDATA[<mail name="rectify" template="rectify-template />]]></programlisting>
  </section>

  <section id="mailservers">
    <title>Servers</title>
    <para>Mail servers are declared in the configuration file. The <literal>mail-server</literal>
      element describes an SMTP mail server capable of sending email messages.
      Because jBPM uses JavaMail to send mail, all properties supported by JavaMail are also
      exposed to jBPM.  Within the <literal>session-properties</literal> child element, 
      the SMTP properties must be provided as shown in the example below.</para>
    <para>See the Sun JavaMail API for more information on supported properties:
      <ulink url="http://java.sun.com/products/javamail/javadocs/com/sun/mail/smtp/package-summary.html">
      Sun SMTP Properties</ulink>.</para>
    <programlisting><![CDATA[<jbpm-configuration>
<transaction-context>
  <mail-session>
    <mail-server>
      <session-properties>
        <property name="mail.smtp.host" value="localhost" />
        <property name="mail.smtp.port" value="2525" />
        <property name="mail.from" value="noreply@jbpm.org" />
      </session-properties>
    </mail-server>
  </mail-session>
</transaction-context>
</jbpm-configuration>]]></programlisting>
    <para>If the "From" attribute is not present in an outgoing message, the value of the 
      <literal>mail.from</literal> property will be used instead.</para>
      
    <section id="multiplemailservers">
      <title>Multiple Servers</title>
      <para>Multiple SMTP server support has been added to jBPM 4 to accommodate a wider
        variety of organizational server structures. For example, this is useful for companies
        that have both internal and external SMTP servers.</para>
      <para>To setup multiple SMTP mail servers, declare multiple mail servers within the 
        configuration file, as described below. The tag <literal>address-filter</literal> exists
        to define which domains are serviced by each mail server. The address filter consists
        of regular expressions that determine whether an address will be processed by a given
        server.</para>
      <para>See the Sun Pattern API for more information on supported regular expressions:
        <ulink url="http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/Pattern.html">
        Sun Regex Patterns</ulink>.</para>
      <programlisting><![CDATA[<jbpm-configuration>
<transaction-context>
  <mail-session>
    <mail-server>
      <address-filter>
        <include>.+@jbpm.org</include>
      </address-filter>
      <session-properties>
        <property name="mail.smtp.host" value="int.smtp.jbpm.org" />
        <property name="mail.from" value="noreply@jbpm.org" />
      </session-properties>
    </mail-server>
    <mail-server>
      <address-filter>
        <exclude>.+@jbpm.org</exclude>
      </address-filter>
      <session-properties>
        <property name="mail.smtp.host" value="ext.smtp.jbpm.org" />
        <property name="mail.from" value="noreply@jbpm.org" />
      </session-properties>
    </mail-server>
  </mail-session>
</transaction-context>
</jbpm-configuration>]]></programlisting>
    <para>Address filters follow the logic below to accept an address.</para>
    <itemizedlist>
      <listitem><para>Address is accepted if it is <emphasis>included</emphasis> and
        <emphasis>not excluded</emphasis>.</para></listitem>
      <listitem><para>Absence of includes implies the address is 
        <emphasis>included</emphasis>.</para></listitem>
      <listitem><para>Absence of excludes implies the address is 
        <emphasis>not excluded</emphasis>.</para></listitem>
    </itemizedlist>
    </section>
  </section>

  <section id="extensibility">
    <title>Extension Points</title>

    <section id="customproducers">
      <title>Custom Producers</title>
      <para>jBPM 4 allows the creation of your own Mail Producers to address an organization's
        specific email needs.  To do so, users must implement the 
        <literal>org.jbpm.pvm.internal.email.spi.MailProducer</literal> interface.  The method
        <literal>produce</literal> will return one or more <literal>Message</literal> objects,
        which will be sent through the <literal>MailSession</literal>.</para>
    
      <section id="custom attachments">
        <title>Example: Custom Attachments</title>
        <para>Generation of custom attachments at runtime can be easily implemented in jBPM 4.
          By extending the default mail producer, or implementing your own with the
          <literal>MailProducer</literal> interface, attachments can be generated and
          added to email messages at runtime.</para>
        <para>The following is an example of how to extend <literal>MailProducerImpl</literal>
           to add an extra attachment to every outgoing mail.</para>
        <programlisting><![CDATA[public class CustomMailProducer extends MailProducerImpl {

  protected void addAttachments(Execution execution, Multipart multipart) {
    // have default mail producer create attachments from template
    super.addAttachments(execution, multipart);

    // create a body part to carry the content
    BodyPart attachmentPart = new MimeBodyPart();

    // set content provided by an arbitrary data handler
    attachmentPart.setDataHandler(...);

    // attach content
    multipart.addBodyPart(attachmentPart);
  }
}]]></programlisting>
      </section>
    </section>
  
  </section>
  
</chapter>